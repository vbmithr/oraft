USE_OCAMLFIND  = true
BYTE_ENABLED   = true
NATIVE_ENABLED = true

OCAMLFINDFLAGS = -syntax camlp4o -ppopt -lwt-debug

OCAMLFLAGS = -g -w +a-4-6-9-27..29-30-32..99 -warn-error +a-4-6-9-18-27-28-29..99 -bin-annot
OCAMLOPTFLAGS = -inline 1000

VERSION = 0.1

OCAMLPACKS[] =
   batteries
   lwt.unix
   lwt.syntax
   lwt.syntax.log
   extprot
   tls.lwt

if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

OBJECTS[] =
    oraft
    oraft_lwt
    oraft_proto
    oraft_util
    RSM

OCamlGeneratedFiles(oraft_proto)

oraft_proto.ml: oraft_proto.proto
        extprotc $<

LIBS     = $(OCamlLibrary oraft, $(OBJECTS))

section
    OCAML_LIBS = oraft
    PROGRAMS = $(OCamlProgram test_DES, oraft test_DES) \
               $(OCamlProgram dict, dict)
    .DEFAULT: $(PROGRAMS)

%.sig: %.ml %.cmo
    $(OCAMLFIND) $(OCAMLC) -package camlp4.macro,$(concat \,, $(OCAMLPACKS)) \
        -syntax camlp4o \
        $(mapprefix -I, $(OCAMLINCLUDES)) \
        $(OCAMLFLAGS) $(OCAMLCFLAGS) -i $< > $@

.DEFAULT: $(LIBS)

META: META.in
        sed s/VERSION/$(VERSION)/g $< > $@

.PHONY: clean install uninstall

install: $(LIBS) META
	ocamlfind remove oraft
	ocamlfind install oraft META $(ls *.cmi *.cmxa *.cma *.a *.mli)

uninstall:
	ocamlfind remove oraft

clean:
	rm -f $(filter-proper-targets $(ls R, .))

# vim: set expandtab:
